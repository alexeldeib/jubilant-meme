name: $(Date:yyyyMMdd)$(Rev:.r)_$(Build.SourceBranchName)_$(BuildID)
# trigger: none

pool:
  name: nodesigtest-pool

stages:
- stage: build_vhd
  dependsOn: []
  jobs:
  - job: matrix
    steps:
    - bash: ./scripts/install-nix.sh
    - bash: |
        set -eux
        source /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
        nix develop -c cachix use alexeldeib
        ./scripts/matrix.sh
        scenarios=$(./scripts/matrix.sh)
        echo "##vso[task.setVariable variable=output;isOutput=true]"$scenarios
      name: matrix
  - job: build
    dependsOn:
    - matrix
    strategy:
      matrix: $[ dependencies.matrix.outputs['matrix.output'] ]
    timeoutInMinutes: 180
    steps:
    - bash: ./scripts/install-nix.sh
      displayName: install nix
    - bash: |-
        set -euxo pipefail
        echo "starting build"
        source /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
        nix develop -c cachix use alexeldeib

        az login --identity
        SUBSCRIPTION="$(az account show | jq -r .id)"
        GROUP="$(mktemp -u ace-XXXXXXX | tr '[:upper:]' '[:lower:]')"
        echo $GROUP > groupname.txt
        GALLERY="$(echo $GROUP | tr -d '-')"
        export GALLERY
        export GROUP
        export SUBSCRIPTION
        echo "sku = $(sku)"
        export kube_version="$(kube_version)"
        export sku="$(sku)"
        generation="$(nix develop -c bash -c "cue export matrix.cue | jq -r --arg sku $sku '.skus[\"$sku\"].generation'")"
        echo "generation = ${generation}"
        echo "##vso[task.setVariable variable=groupname;isOutput=true]"$GROUP
        az group create -g "${GROUP}" -l "eastus" --tags "aleldeib=true"
        az sig create -g $GROUP -r $GALLERY
        az sig image-definition create \
          --resource-group ${GROUP} \
          --gallery-name $GALLERY \
          --gallery-image-definition $(echo $(sku) | tr -d '-') \
          --publisher microsoft-aks \
          --offer $GALLERY \
          --sku $(echo $(sku) | tr -d '-') \
          --os-type Linux \
          --hyper-v-generation ${generation} \
          --location eastus 
        outfile=$(mktemp --suffix=.json packer-out-XXXX)
        echo "kube_version $(kube_version)"
        patches=""
        patchFiles="$(nix develop -c bash -c "cue export matrix.cue | jq -r --arg sku $sku '.skus[\"$sku\"].patches[]'")"
        for file in $patchFiles; do
          patches="$patches -p $file"
        done

        nix develop -c bash ./scripts/package.sh
        nix develop -c bash -c "json-patch $patches < packer/base.json | jq | tee $outfile"
        sleep 60
        export PACKER_LOG=1
        nix develop -c packer build -var-file=packer/$sku.json $outfile
      displayName: install dependencies
      name: build
    - bash: |-
        set -euxo pipefail
        az group delete -y --no-wait -g $(cat groupname.txt)
      displayName: cleanup
      condition: always()
